import 'dart:isolate';

bool isPrime(int number) {
  for (int i = 2; i <= number / 2; i++) {
    if (number % i == 0) return false;
  }
  return true;
}

// Ø§Ù„Ø¯Ø§Ù„Ø© Ø§Ù„ØªÙŠ Ø³ÙŠØªÙ… ØªØ´ØºÙŠÙ„Ù‡Ø§ Ø¯Ø§Ø®Ù„ Ø§Ù„Ù€ Isolate
// The function that will run inside the Isolate
void findPrimes(SendPort sendPort) {
  List<int> primes = [];
  for (int i = 2; i < 100000; i++) {
    if (isPrime(i)) {
      primes.add(i);
    }
  }
  // Ø¥Ø±Ø³Ø§Ù„ Ø§Ù„Ù†ØªØ§Ø¦Ø¬ Ø¥Ù„Ù‰ Isolate Ø§Ù„Ø±Ø¦ÙŠØ³ÙŠ
  // Send the results to the main Isolate
  sendPort.send(primes);
}

void printMessage(SendPort sendPort) {
  sendPort.send("ðŸ’¬ Ù…Ø±Ø­Ø¨Ù‹Ø§ Ù…Ù† Isolate Ø§Ù„Ø¬Ø¯ÙŠØ¯!");
}

Future<int> heavyTask(int number) async {
  // Ù…Ø«Ø§Ù„ Ø¹Ù„Ù‰ Ø¹Ù…Ù„ÙŠØ© Ø¨Ø³ÙŠØ·Ø©
  // An example of a simple operation
  return number * 2;
}
